name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest] # macos-latest
    runs-on: ${{matrix.platform}}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - uses: lukka/get-cmake@latest

    - name: Run vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgJsonGlob: 'vcpkg.json'

    - name: Update gcc
      run: |
           sudo apt update
           sudo apt install gcc-11 g++-11
           echo "CC=gcc-11" >> $GITHUB_ENV
           echo "CXX=g++-11" >> $GITHUB_ENV
      shell: bash
      if: matrix.platform == 'ubuntu-latest'

    - name: Set clang
      run: |
           echo "CC=/usr/local/opt/llvm/bin/clang" >> $GITHUB_ENV
           echo "CXX=/usr/local/opt/llvm/bin/clang++" >> $GITHUB_ENV
      shell: bash
      if: matrix.platform == 'macos-latest'

    - name: Run cmake
      run: |
        vcpkg\vcpkg.exe env
        cmd /c set
      if: matrix.platform == 'windows-latest'

    - name: Run cmake
      uses: lukka/run-cmake@v10
      with:
        configurePreset: 'windows-static'
        buildPreset: 'windows-static-release'
      if: matrix.platform == 'windows-latest'

    - name: Run cmake
      uses: lukka/run-cmake@v10
      with:
        configurePreset: 'static'
        buildPreset: 'release-static'
      if: matrix.platform == 'ubuntu-latest'

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.platform }}-release
        path: build/windows-static-release/wfs-extract
      if: matrix.platform == 'windows-latest'

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.platform }}-release
        path: build/release-static/wfs-extract
      if: matrix.platform == 'ubuntu-latest'

